import tkinter as tk
from tkinter import messagebox

class DeveloperGUI:
    def __init__(self, master):
        self.master = master
        self.master.title("Developer Information")
        
        self.developers = []  # List to store developer information

        # Labels and Entry widgets for developer information
        self.label_name = tk.Label(master, text="Name:")
        self.entry_name = tk.Entry(master)

        self.label_skills = tk.Label(master, text="Skills:")
        self.entry_skills = tk.Entry(master)

        self.label_project = tk.Label(master, text="Project Details:")
        self.entry_project = tk.Entry(master)

        # Buttons for CRUD operations
        self.button_insert = tk.Button(master, text="Insert", command=self.insert_developer)
        self.button_update = tk.Button(master, text="Update", command=self.update_developer)
        self.button_delete = tk.Button(master, text="Delete", command=self.delete_developer)

        # Listbox to display developers
        self.listbox = tk.Listbox(master, selectmode=tk.SINGLE)
        self.listbox.bind('<<ListboxSelect>>', self.load_developer_info)

        # Arrange widgets using grid layout
        self.label_name.grid(row=0, column=0, padx=5, pady=5)
        self.entry_name.grid(row=0, column=1, padx=5, pady=5)
        self.label_skills.grid(row=1, column=0, padx=5, pady=5)
        self.entry_skills.grid(row=1, column=1, padx=5, pady=5)
        self.label_project.grid(row=2, column=0, padx=5, pady=5)
        self.entry_project.grid(row=2, column=1, padx=5, pady=5)

        self.button_insert.grid(row=3, column=0, columnspan=2, pady=10)
        self.button_update.grid(row=4, column=0, columnspan=2, pady=10)
        self.button_delete.grid(row=5, column=0, columnspan=2, pady=10)

        self.listbox.grid(row=0, column=2, rowspan=6, padx=10)

        # Populate the listbox with developer names
        self.update_listbox()

    def insert_developer(self):
        name = self.entry_name.get()
        skills = self.entry_skills.get()
        project_details = self.entry_project.get()

        if name and skills and project_details:
            self.developers.append({"Name": name, "Skills": skills, "Project Details": project_details})
            self.update_listbox()
            self.clear_entries()
        else:
            messagebox.showwarning("Incomplete Information", "Please enter all details.")

    def update_developer(self):
        selected_index = self.listbox.curselection()
        if selected_index:
            index = selected_index[0]
            name = self.entry_name.get()
            skills = self.entry_skills.get()
            project_details = self.entry_project.get()

            if name and skills and project_details:
                self.developers[index] = {"Name": name, "Skills": skills, "Project Details": project_details}
                self.update_listbox()
                self.clear_entries()
            else:
                messagebox.showwarning("Incomplete Information", "Please enter all details.")
        else:
            messagebox.showwarning("No Developer Selected", "Please select a developer from the list.")

    def delete_developer(self):
        selected_index = self.listbox.curselection()
        if selected_index:
            index = selected_index[0]
            del self.developers[index]
            self.update_listbox()
            self.clear_entries()
        else:
            messagebox.showwarning("No Developer Selected", "Please select a developer from the list.")

    def load_developer_info(self, event):
        selected_index = self.listbox.curselection()
        if selected_index:
            index = selected_index[0]
            developer = self.developers[index]
            self.entry_name.delete(0, tk.END)
            self.entry_name.insert(0, developer["Name"])
            self.entry_skills.delete(0, tk.END)
            self.entry_skills.insert(0, developer["Skills"])
            self.entry_project.delete(0, tk.END)
            self.entry_project.insert(0, developer["Project Details"])

    def update_listbox(self):
        # Clear the listbox and populate it with developer names
        self.listbox.delete(0, tk.END)
        for developer in self.developers:
            self.listbox.insert(tk.END, developer["Name"])

    def clear_entries(self):
        # Clear entry fields
        self.entry_name.delete(0, tk.END)
        self.entry_skills.delete(0, tk.END)
        self.entry_project.delete(0, tk.END)

if __name__ == "__main__":
    root = tk.Tk()
    app = DeveloperGUI(root)
    root.mainloop()
